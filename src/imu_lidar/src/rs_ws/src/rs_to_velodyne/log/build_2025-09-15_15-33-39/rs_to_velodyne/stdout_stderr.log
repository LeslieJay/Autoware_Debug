-- The C compiler identification is GNU 11.4.0
-- The CXX compiler identification is GNU 11.4.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/lib/ccache/gcc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/lib/ccache/g++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found ament_cmake: 1.3.11 (/opt/ros/humble/share/ament_cmake/cmake)
-- Found Python3: /usr/bin/python3 (found version "3.10.12") found components: Interpreter 
-- Found rclcpp: 16.0.12 (/opt/ros/humble/share/rclcpp/cmake)
-- Found rosidl_generator_c: 3.1.6 (/opt/ros/humble/share/rosidl_generator_c/cmake)
-- Found rosidl_adapter: 3.1.6 (/opt/ros/humble/share/rosidl_adapter/cmake)
-- Found rosidl_generator_cpp: 3.1.6 (/opt/ros/humble/share/rosidl_generator_cpp/cmake)
-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
-- Found rmw_implementation_cmake: 6.1.2 (/opt/ros/humble/share/rmw_implementation_cmake/cmake)
-- Found rmw_fastrtps_cpp: 6.2.7 (/opt/ros/humble/share/rmw_fastrtps_cpp/cmake)
-- Found OpenSSL: /usr/lib/aarch64-linux-gnu/libcrypto.so (found version "3.0.2")  
-- Found FastRTPS: /opt/ros/humble/include  
-- Using RMW implementation 'rmw_fastrtps_cpp' as default
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
-- Found Threads: TRUE  
-- Found sensor_msgs: 4.8.0 (/opt/ros/humble/share/sensor_msgs/cmake)
-- Found message_filters: 4.3.7 (/opt/ros/humble/share/message_filters/cmake)
-- Found pcl_conversions: 2.4.5 (/opt/ros/humble/share/pcl_conversions/cmake)
-- Checking for module 'eigen3'
--   Found eigen3, version 3.4.0
-- Found Eigen: /usr/include/eigen3 (Required is at least version "3.1") 
-- Eigen found (include: /usr/include/eigen3, version: 3.4.0)
-- Checking for module 'flann'
--   Found flann, version 1.9.1
-- Found FLANN: /usr/lib/aarch64-linux-gnu/libflann_cpp.so  
-- FLANN found (include: /usr/include, lib: /usr/lib/aarch64-linux-gnu/libflann_cpp.so)
-- Checking for module 'libusb-1.0'
--   Found libusb-1.0, version 1.0.25
-- Found libusb: /usr/lib/aarch64-linux-gnu/libusb-1.0.so  
-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)
-- OpenNI2 found (version: 2.2.0.33, include: /usr/include/openni2, lib: /usr/lib/aarch64-linux-gnu/libOpenNI2.so;libusb::libusb)
-- Eigen found (include: /usr/include/eigen3, version: 3.4.0)
-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)
-- OpenNI2 found (version: 2.2.0.33, include: /usr/include/openni2, lib: /usr/lib/aarch64-linux-gnu/libOpenNI2.so;libusb::libusb)
-- Found Qhull version 8.0.2
-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)
-- Found PCL_COMMON: /usr/lib/aarch64-linux-gnu/libpcl_common.so  
-- Found PCL_KDTREE: /usr/lib/aarch64-linux-gnu/libpcl_kdtree.so  
-- Found PCL_OCTREE: /usr/lib/aarch64-linux-gnu/libpcl_octree.so  
-- Found PCL_SEARCH: /usr/lib/aarch64-linux-gnu/libpcl_search.so  
-- Found PCL_SAMPLE_CONSENSUS: /usr/lib/aarch64-linux-gnu/libpcl_sample_consensus.so  
-- Found PCL_FILTERS: /usr/lib/aarch64-linux-gnu/libpcl_filters.so  
-- Found PCL_2D: /usr/include/pcl-1.12  
-- Found PCL_GEOMETRY: /usr/include/pcl-1.12  
-- Found PCL_IO: /usr/lib/aarch64-linux-gnu/libpcl_io.so  
-- Found PCL_FEATURES: /usr/lib/aarch64-linux-gnu/libpcl_features.so  
-- Found PCL_ML: /usr/lib/aarch64-linux-gnu/libpcl_ml.so  
-- Found PCL_SEGMENTATION: /usr/lib/aarch64-linux-gnu/libpcl_segmentation.so  
-- Found PCL_VISUALIZATION: /usr/lib/aarch64-linux-gnu/libpcl_visualization.so  
-- Found PCL_SURFACE: /usr/lib/aarch64-linux-gnu/libpcl_surface.so  
-- Found PCL_REGISTRATION: /usr/lib/aarch64-linux-gnu/libpcl_registration.so  
-- Found PCL_KEYPOINTS: /usr/lib/aarch64-linux-gnu/libpcl_keypoints.so  
-- Found PCL_TRACKING: /usr/lib/aarch64-linux-gnu/libpcl_tracking.so  
-- Found PCL_RECOGNITION: /usr/lib/aarch64-linux-gnu/libpcl_recognition.so  
-- Found PCL_STEREO: /usr/lib/aarch64-linux-gnu/libpcl_stereo.so  
-- Found PCL_APPS: /usr/lib/aarch64-linux-gnu/libpcl_apps.so  
-- Found PCL_IN_HAND_SCANNER: /usr/include/pcl-1.12  
-- Found PCL_MODELER: /usr/include/pcl-1.12  
-- Found PCL_POINT_CLOUD_EDITOR: /usr/include/pcl-1.12  
-- Found PCL_OUTOFCORE: /usr/lib/aarch64-linux-gnu/libpcl_outofcore.so  
-- Found PCL_PEOPLE: /usr/lib/aarch64-linux-gnu/libpcl_people.so  
-- Found pcl_ros: 2.4.5 (/opt/ros/humble/share/pcl_ros/cmake)
-- Found eigen3_cmake_module: 0.1.1 (/opt/ros/humble/share/eigen3_cmake_module/cmake)
-- Found Eigen3: TRUE (found version "3.4.0") 
-- Ensuring Eigen3 include directory is part of orocos-kdl CMake target
-- Found ament_lint_auto: 0.12.12 (/opt/ros/humble/share/ament_lint_auto/cmake)
-- Added test 'copyright' to check source files copyright and LICENSE
-- Added test 'cppcheck' to perform static code analysis on C / C++ code
-- Configured cppcheck include dirs: 
-- Configured cppcheck exclude dirs and/or files: 
-- Added test 'cpplint' to check C / C++ code against the Google style
-- Configured cpplint exclude dirs and/or files: 
-- Added test 'lint_cmake' to check CMake code style
-- Added test 'uncrustify' to check C / C++ code style
-- Configured uncrustify additional arguments: 
-- Added test 'xmllint' to check XML markup files
-- Configuring done
-- Generating done
-- Build files have been written to: /home1/rs_ws/src/rs_to_velodyne/build/rs_to_velodyne
[ 50%] [32mBuilding CXX object CMakeFiles/rs_to_velodyne.dir/src/rs_to_velodyne.cpp.o[0m
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:31:22:[m[K [01;35m[Kwarning: [m[Kextra â€˜[01m[K;[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
   31 |     PCL_ADD_INTENSITY[01;35m[K;[m[K
      |                      [01;35m[K^[m[K
      |                      [31m[K-[m[K
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:45:22:[m[K [01;35m[Kwarning: [m[Kextra â€˜[01m[K;[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
   45 |     PCL_ADD_INTENSITY[01;35m[K;[m[K
      |                      [01;35m[K^[m[K
      |                      [31m[K-[m[K
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:60:22:[m[K [01;35m[Kwarning: [m[Kextra â€˜[01m[K;[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
   60 |     PCL_ADD_INTENSITY[01;35m[K;[m[K
      |                      [01;35m[K^[m[K
      |                      [31m[K-[m[K
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:[m[K In function â€˜[01m[Kvoid rsHandler_XYZI(sensor_msgs::msg::PointCloud2)[m[Kâ€™:
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:107:37:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<pcl::PointXYZI, Eigen::aligned_allocator<pcl::PointXYZI> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  107 |     for (int point_id = 0; [01;35m[Kpoint_id < pc->points.size()[m[K; ++point_id) {
      |                            [01;35m[K~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp: In instantiation of â€˜[01m[Kbool has_nan(T) [with T = pcl::PointXYZI][m[Kâ€™:
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:108:20:[m[K   required from here
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:81:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kpcl_isnan[m[Kâ€™ was not declared in this scope
   81 |     if ([01;31m[Kpcl_isnan(point.x)[m[K || pcl_isnan(point.y) || pcl_isnan(point.z)) {
      |         [01;31m[K~~~~~~~~~^~~~~~~~~[m[K
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:81:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kpcl_isnan[m[Kâ€™ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [[01;31m[K-fpermissive[m[K]
   81 |     if (pcl_isnan(point.x) || [01;31m[Kpcl_isnan(point.y)[m[K || pcl_isnan(point.z)) {
      |                               [01;31m[K~~~~~~~~~^~~~~~~~~[m[K
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:81:62:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kpcl_isnan[m[Kâ€™ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [[01;31m[K-fpermissive[m[K]
   81 |     if (pcl_isnan(point.x) || pcl_isnan(point.y) || [01;31m[Kpcl_isnan(point.z)[m[K) {
      |                                                     [01;31m[K~~~~~~~~~^~~~~~~~~[m[K
/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp: In instantiation of â€˜[01m[Kvoid handle_pc_msg(const typename pcl::PointCloud<PointT>::Ptr&, const typename pcl::PointCloud<PointOutT>::Ptr&) [with T_in_p = RsPointXYZIRT; T_out_p = VelodynePointXYZIRT; typename pcl::PointCloud<PointT>::Ptr = std::shared_ptr<pcl::PointCloud<RsPointXYZIRT> >; typename pcl::PointCloud<PointOutT>::Ptr = std::shared_ptr<pcl::PointCloud<VelodynePointXYZIRT> >][m[Kâ€™:
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:182:58:[m[K   required from here
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:134:37:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<RsPointXYZIRT, Eigen::aligned_allocator<RsPointXYZIRT> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  134 |     for (int point_id = 0; [01;35m[Kpoint_id < pc_in->points.size()[m[K; ++point_id) {
      |                            [01;35m[K~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp: In instantiation of â€˜[01m[Kvoid add_ring(const typename pcl::PointCloud<PointT>::Ptr&, const typename pcl::PointCloud<PointOutT>::Ptr&) [with T_in_p = RsPointXYZIRT; T_out_p = VelodynePointXYZIRT; typename pcl::PointCloud<PointT>::Ptr = std::shared_ptr<pcl::PointCloud<RsPointXYZIRT> >; typename pcl::PointCloud<PointOutT>::Ptr = std::shared_ptr<pcl::PointCloud<VelodynePointXYZIRT> >][m[Kâ€™:
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:183:53:[m[K   required from here
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:155:37:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<RsPointXYZIRT, Eigen::aligned_allocator<RsPointXYZIRT> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  155 |     for (int point_id = 0; [01;35m[Kpoint_id < pc_in->points.size()[m[K; ++point_id) {
      |                            [01;35m[K~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp: In instantiation of â€˜[01m[Kvoid add_time(const typename pcl::PointCloud<PointT>::Ptr&, const typename pcl::PointCloud<PointOutT>::Ptr&) [with T_in_p = RsPointXYZIRT; T_out_p = VelodynePointXYZIRT; typename pcl::PointCloud<PointT>::Ptr = std::shared_ptr<pcl::PointCloud<RsPointXYZIRT> >; typename pcl::PointCloud<PointOutT>::Ptr = std::shared_ptr<pcl::PointCloud<VelodynePointXYZIRT> >][m[Kâ€™:
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:184:53:[m[K   required from here
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:168:37:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<RsPointXYZIRT, Eigen::aligned_allocator<RsPointXYZIRT> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  168 |     for (int point_id = 0; [01;35m[Kpoint_id < pc_in->points.size()[m[K; ++point_id) {
      |                            [01;35m[K~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp: In instantiation of â€˜[01m[Kvoid handle_pc_msg(const typename pcl::PointCloud<PointT>::Ptr&, const typename pcl::PointCloud<PointOutT>::Ptr&) [with T_in_p = RsPointXYZIRT; T_out_p = VelodynePointXYZIR; typename pcl::PointCloud<PointT>::Ptr = std::shared_ptr<pcl::PointCloud<RsPointXYZIRT> >; typename pcl::PointCloud<PointOutT>::Ptr = std::shared_ptr<pcl::PointCloud<VelodynePointXYZIR> >][m[Kâ€™:
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:188:57:[m[K   required from here
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:134:37:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<RsPointXYZIRT, Eigen::aligned_allocator<RsPointXYZIRT> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  134 |     for (int point_id = 0; [01;35m[Kpoint_id < pc_in->points.size()[m[K; ++point_id) {
      |                            [01;35m[K~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp: In instantiation of â€˜[01m[Kvoid add_ring(const typename pcl::PointCloud<PointT>::Ptr&, const typename pcl::PointCloud<PointOutT>::Ptr&) [with T_in_p = RsPointXYZIRT; T_out_p = VelodynePointXYZIR; typename pcl::PointCloud<PointT>::Ptr = std::shared_ptr<pcl::PointCloud<RsPointXYZIRT> >; typename pcl::PointCloud<PointOutT>::Ptr = std::shared_ptr<pcl::PointCloud<VelodynePointXYZIR> >][m[Kâ€™:
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:189:52:[m[K   required from here
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:155:37:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<RsPointXYZIRT, Eigen::aligned_allocator<RsPointXYZIRT> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  155 |     for (int point_id = 0; [01;35m[Kpoint_id < pc_in->points.size()[m[K; ++point_id) {
      |                            [01;35m[K~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp: In instantiation of â€˜[01m[Kvoid handle_pc_msg(const typename pcl::PointCloud<PointT>::Ptr&, const typename pcl::PointCloud<PointOutT>::Ptr&) [with T_in_p = RsPointXYZIRT; T_out_p = pcl::PointXYZI; typename pcl::PointCloud<PointT>::Ptr = std::shared_ptr<pcl::PointCloud<RsPointXYZIRT> >; typename pcl::PointCloud<PointOutT>::Ptr = std::shared_ptr<pcl::PointCloud<pcl::PointXYZI> >][m[Kâ€™:
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:193:53:[m[K   required from here
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:134:37:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<RsPointXYZIRT, Eigen::aligned_allocator<RsPointXYZIRT> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  134 |     for (int point_id = 0; [01;35m[Kpoint_id < pc_in->points.size()[m[K; ++point_id) {
      |                            [01;35m[K~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp: In instantiation of â€˜[01m[Kbool has_nan(T) [with T = RsPointXYZIRT][m[Kâ€™:
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:135:20:[m[K   required from â€˜[01m[Kvoid handle_pc_msg(const typename pcl::PointCloud<PointT>::Ptr&, const typename pcl::PointCloud<PointOutT>::Ptr&) [with T_in_p = RsPointXYZIRT; T_out_p = VelodynePointXYZIRT; typename pcl::PointCloud<PointT>::Ptr = std::shared_ptr<pcl::PointCloud<RsPointXYZIRT> >; typename pcl::PointCloud<PointOutT>::Ptr = std::shared_ptr<pcl::PointCloud<VelodynePointXYZIRT> >][m[Kâ€™
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:182:58:[m[K   required from here
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:81:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kpcl_isnan[m[Kâ€™ was not declared in this scope
   81 |     if ([01;31m[Kpcl_isnan(point.x)[m[K || pcl_isnan(point.y) || pcl_isnan(point.z)) {
      |         [01;31m[K~~~~~~~~~^~~~~~~~~[m[K
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:81:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kpcl_isnan[m[Kâ€™ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [[01;31m[K-fpermissive[m[K]
   81 |     if (pcl_isnan(point.x) || [01;31m[Kpcl_isnan(point.y)[m[K || pcl_isnan(point.z)) {
      |                               [01;31m[K~~~~~~~~~^~~~~~~~~[m[K
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:81:62:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kpcl_isnan[m[Kâ€™ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [[01;31m[K-fpermissive[m[K]
   81 |     if (pcl_isnan(point.x) || pcl_isnan(point.y) || [01;31m[Kpcl_isnan(point.z)[m[K) {
      |                                                     [01;31m[K~~~~~~~~~^~~~~~~~~[m[K
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:[m[K In function â€˜[01m[Kbool has_nan(T) [with T = pcl::PointXYZI][m[Kâ€™:
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:86:1:[m[K [01;35m[Kwarning: [m[Kcontrol reaches end of non-void function [[01;35m[K-Wreturn-type[m[K]
   86 | [01;35m[K}[m[K
      | [01;35m[K^[m[K
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:[m[K In function â€˜[01m[Kbool has_nan(T) [with T = RsPointXYZIRT][m[Kâ€™:
[01m[K/home1/rs_ws/src/rs_to_velodyne/src/rs_to_velodyne.cpp:86:1:[m[K [01;35m[Kwarning: [m[Kcontrol reaches end of non-void function [[01;35m[K-Wreturn-type[m[K]
   86 | [01;35m[K}[m[K
      | [01;35m[K^[m[K
gmake[2]: *** [CMakeFiles/rs_to_velodyne.dir/build.make:76ï¼šCMakeFiles/rs_to_velodyne.dir/src/rs_to_velodyne.cpp.o] é”™è¯¯ 1
gmake[1]: *** [CMakeFiles/Makefile2:137ï¼šCMakeFiles/rs_to_velodyne.dir/all] é”™è¯¯ 2
gmake: *** [Makefile:146ï¼šall] é”™è¯¯ 2
